var documenterSearchIndex = {"docs":
[{"location":"mesh/#Mesh","page":"Mesh","title":"Mesh","text":"","category":"section"},{"location":"mesh/","page":"Mesh","title":"Mesh","text":"SemiAlgebraicTypes.Mesh","category":"page"},{"location":"mesh/#SemiAlgebraicTypes.Mesh","page":"Mesh","title":"SemiAlgebraicTypes.Mesh","text":"Mesh{T}\n\nMesh corresponding to an array of points (Vector{T}), an array of edges (Vector{Int64}) and an array of faces (Vector{Int64}).\n\nExample\n\njulia> mesh(Float64);\n\njulia> mesh([[cos(i*pi/5), sin(i*pi/5), 0.0] for i in 1:10], Edge[], [[1,i,i+1] for i in 1:9]);\n\nFields:\n\npoints  ::Matrix{T}: array of points\nedges   ::Vector{Vector{Int64}}: array of edges\nfaces   ::Vector{Vector{Int64}}: array of faces\nnormals ::Matrix{T}: array of normals\nattr    ::Dict{Symbol,Any}: attributes\n\n\n\n\n\n","category":"type"},{"location":"mesh/#Accessors-and-modificators","page":"Mesh","title":"Accessors and modificators","text":"","category":"section"},{"location":"mesh/","page":"Mesh","title":"Mesh","text":"SemiAlgebraicTypes.push_vertex!","category":"page"},{"location":"mesh/#SemiAlgebraicTypes.push_vertex!","page":"Mesh","title":"SemiAlgebraicTypes.push_vertex!","text":"Insert a vertex at the end of the vertex array of a mesh.\n\njulia> m = mesh(Float64,3);\n\njulia> push_vertex!(m,[1.,2.,3.])\nSemiAlgebraicTypes.Mesh{Float64}(Array{Float64,1}[[1.0, 2.0, 3.0]], Array{Int64,1}[], Array{Int64,1}[], Dict{Symbol,Any}())\n\n\n\n\n\n\n","category":"function"},{"location":"mesh/","page":"Mesh","title":"Mesh","text":"SemiAlgebraicTypes.push_edge!","category":"page"},{"location":"mesh/#SemiAlgebraicTypes.push_edge!","page":"Mesh","title":"SemiAlgebraicTypes.push_edge!","text":"Insert a new edge given by the array of indices of the points (numbering starting at 1) at the end of the edge array of the mesh.\n\njulia> m = mesh(Float64);\n\njulia> push_vertex!(m,point(0.,0.,0.)); push_vertex!(m,point(1.,0.,0.)); push_edge!(m,[1,2])\nSemiAlgebraicTypes.Mesh{Float64}(Array{Float64,1}[[0.0, 0.0, 0.0], [1.0, 0.0, 0.0]], Array{Int64,1}[[1, 2]], Array{Int64,1}[], Dict{Symbol,Any}())\n\n\n\n\n\n\n","category":"function"},{"location":"mesh/","page":"Mesh","title":"Mesh","text":"SemiAlgebraicTypes.push_face!","category":"page"},{"location":"mesh/#SemiAlgebraicTypes.push_face!","page":"Mesh","title":"SemiAlgebraicTypes.push_face!","text":"Insert a new face with the array of indices of the points (numbering starting at 1) at the end of the face array.\n\njulia> m = mesh(Float64);\n\njulia> for i in 1:10 push_vertex!(m,[cos(i*pi/5), sin(i*pi/5), 0.0]) end;\n\njulia> for i in 1:9 push_face!(m,[1,i,i+1]) end;\n\n\n\n\n\n","category":"function"},{"location":"mesh/#Constructors","page":"Mesh","title":"Constructors","text":"","category":"section"},{"location":"mesh/","page":"Mesh","title":"Mesh","text":"SemiAlgebraicTypes.cube","category":"page"},{"location":"mesh/#SemiAlgebraicTypes.cube","page":"Mesh","title":"SemiAlgebraicTypes.cube","text":"cube(c::Vector{T}, r::T)\n\nCompute the mesh corresponding to a cube aligned with the axes and centered at the point c of size 2r.\n\n\n\n\n\ncube(p1::Vector{T}, p2::Vector{T})\n\nCompute the mesh corresponding to a cube aligned with the axes with diagonal points p1, p2.\n\n\n\n\n\n","category":"function"},{"location":"code/#Basic-types","page":"Basic types","title":"Basic types","text":"","category":"section"},{"location":"code/","page":"Basic types","title":"Basic types","text":"Pages = [\"code.md\"]","category":"page"},{"location":"code/","page":"Basic types","title":"Basic types","text":"SemiAlgebraicTypes.Line","category":"page"},{"location":"code/#SemiAlgebraicTypes.Line","page":"Basic types","title":"SemiAlgebraicTypes.Line","text":"Line{T}\n\nLine represented by two points.\n\n\n\n\n\n","category":"type"},{"location":"code/","page":"Basic types","title":"Basic types","text":"SemiAlgebraicTypes.Sphere","category":"page"},{"location":"code/#SemiAlgebraicTypes.Sphere","page":"Basic types","title":"SemiAlgebraicTypes.Sphere","text":"Sphere{T}\n\nSphere represented by a center and a radius.\n\n\n\n\n\n","category":"type"},{"location":"code/","page":"Basic types","title":"Basic types","text":"SemiAlgebraicTypes.Cylinder","category":"page"},{"location":"code/#SemiAlgebraicTypes.Cylinder","page":"Basic types","title":"SemiAlgebraicTypes.Cylinder","text":"Cylinder{T}\n\nCylinder represented by two points and a radius.\n\n\n\n\n\n","category":"type"},{"location":"code/","page":"Basic types","title":"Basic types","text":"SemiAlgebraicTypes.Cone","category":"page"},{"location":"code/#SemiAlgebraicTypes.Cone","page":"Basic types","title":"SemiAlgebraicTypes.Cone","text":"Cone{T}\n\nCone represented by two points and a radius.\n\n\n\n\n\n","category":"type"},{"location":"#SemiAlgebraicTypes","page":"Home","title":"SemiAlgebraicTypes","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"mesh\nbspline functions in dimension 1,2,3","category":"page"}]
}
